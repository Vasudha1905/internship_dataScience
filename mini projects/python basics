### 1) Find the Second Largest Number: Write a function to find the second largest number in a list of integers.
num=[23,45,65,24,89,76,67,21,90]
print("the list of numbers: ", num)
num1= sorted(num, reverse=True)
print("second largest number is: ", num1[1])


### 2) Check Prime Number: Write a function to check if a given number is a prime number or not.
# method 1
from sympy import *
num= int(input("enter your number: "))
x=isprime(num)
print(x)
#method 2
num= int(input("enter your number: "))
n=0
for l in range(1,num):
    if num%l == 0:
        n=n+1
if n!=1: 
    print("it is not prime ")
else:
    print("it is prime")


### 3) Remove Duplicates from a List: Write a function to remove duplicates from a list while preserving the original order.
l1=[1,45,34,34,34,56,76,56,23,23,5,8]
l2=[]
for i in l1:
    if i not in l2:
        l2.append(i)
print("original list is: ",l1)
print("list without duplicates is: ",l2)


### 4) Reverse Words in a String: Write a function to reverse the order of words in a given string.
wrd= input("enter your sentence: ")
words=wrd.split(" ")
x=[]
for i in words:
    x.insert(0,i)
y= " ".join(x)
print(" the string in reverse is: ",y)


### 5) Sort List of Strings: Write a function to sort a list of strings based on their lengths, shortest to longest.
ls= ["red", "green", "yellow","white","orange","ta"]
ls.sort(key=len)
print(ls)


### 6) Find Maximum Subarray Sum: Write a function to find the maximum sum of a contiguous subarray within a one-dimensional array of numbers.¶
def func(l1, n):
    max_sum = l2[0]
    ans = []
    for i in range(n):
        for j in range(i, n):
            a = sum(l2[i:j + 1])
            if a > max_sum:
                max_sum = a
                ans = l2[i:j + 1]
    print("Sub array which will give maximum sum", ans)
    print("Maximum sum = ", max_sum)
l2 = [-1, 8, 1, -7, -1, 5, 1, -3]
print("the list of numbers =", l2)
func(l2, len(l2))


### 7) Check for Anagram Substrings: Write a function to check if a given string contains an anagram of another string as a substring.
string= "bearable"
s2= "bare"
s3= "bear" #anagram
if s3 in string:
    print("it is present ")
else: 
    print("not present")


### 8) Check for Strong Number: Write a function to check if a given number is a strong number or not.
import math as m
def strongnum():
    n=int(input("enter your number: "))
    #converting number to list
    n1=list(str(n))
    ln=[]
    for i in n1:
        x=int(i)
        ln.append(x)    
    fact=[]
    for j in ln:
        a=m.factorial(j)
        fact.append(a) 
    factsum=sum(fact)
    if factsum == n:
        print("it is a strong number")
    else:
        print("it is not a strong number")    
strongnum()


### 9) Calculate Median of List: Write a function to calculate the median of a list of numbers.
def mediancalc():   
    num=[12,56,43,24,45]
    l2=sorted(num)
    print(l2)
    n = len(num)
    if n % 2 == 0:
        median = (num[n//2 - 1] + num[n//2]) / 2
    else:
        median = num[n//2]
    print(median)
mediancalc()


### 10) Generate Pascal's Triangle: Write a function to generate the first n rows of Pascal's triangle.¶
from math import *
def pascal():   
    n=int(input("enter the number of rows: "))
    for i in range(n):
        for j in range(n-i+1):
            print(end=" ")
        for j in range(i+1):
            print(factorial(i)//(factorial(j)*factorial(i-j)), end=" ")
        print()
pascal()


### 11) Find Majority Element: Write a function to find the majority element in an array (element that appears more than n/2 times)
def majority_element(l,n):  
    for i in range(n):
        count=0
        for j in range(n):
            if l[i]==l[j]:
                count=count+1
        if count> n//2 :
            print("majority element is ",l[i]) 
            break
        else:
            print("no majority element")
            break
l1=[4,4,4,5,4,1,4]
n1=len(l)
majority_element(l1,n1)


### 12) Check for Harshad Number: Write a function to check if a given number is a Harshad number or not (a number is divisible by the sum of its digits).
def harshad_num():
    num=int(input("enter your number: "))
    n1=list(str(num))
    ln=[]
    for i in n1:
        x=int(i)
        ln.append(x)
    num_sum= sum(ln)
    if num%num_sum == 0:
        print("it is a harshad number")
    else:
        print("it is not a harshad number")     
harshad_num()


### 13)  Find Pythagorean Triplets: Write a function to find all Pythagorean triplets with side lengths less than or equal to a given limit.
def pytho_triplet():
    lim=int(input("enter the limit of side length: "))
    for x in range (1,lim+1):
        for y in range (1,lim+1):
            for z in range(y,lim+1):   
                if x*x == y*y + z*z :
                    print (x,y,z)    
pytho_triplet()
